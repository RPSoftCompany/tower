import{b3 as _,b2 as y,b as S,x as A,y as v,d as u,h as b,T as N,a_ as I,f as q}from"./index.d78f815c.js";const m={threshold:0,root:null,rootMargin:"0px"};function g(e,r,t){let n,s,o;typeof t=="function"?(n=t,s=m,o=r.cfg===void 0):(n=t.handler,s=Object.assign({},m,t.cfg),o=r.cfg===void 0||y(r.cfg,s)===!1),r.handler!==n&&(r.handler=n),o===!0&&(r.cfg=s,r.observer!==void 0&&r.observer.unobserve(e),r.observer=new IntersectionObserver(([i])=>{if(typeof r.handler=="function"){if(i.rootBounds===null&&document.body.contains(e)===!0){r.observer.unobserve(e),r.observer.observe(e);return}(r.handler(i,r.observer)===!1||r.once===!0&&i.isIntersecting===!0)&&h(e)}},s),r.observer.observe(e))}function h(e){const r=e.__qvisible;r!==void 0&&(r.observer!==void 0&&r.observer.unobserve(e),delete e.__qvisible)}var w=_({name:"intersection",mounted(e,{modifiers:r,value:t}){const n={once:r.once===!0};g(e,n,t),e.__qvisible=n},updated(e,r){const t=e.__qvisible;t!==void 0&&g(e,t,r.value)},beforeUnmount:h}),P=S({name:"QIntersection",props:{tag:{type:String,default:"div"},once:Boolean,transition:String,transitionDuration:{type:[String,Number],default:300},ssrPrerender:Boolean,margin:String,threshold:[Number,Array],root:{default:null},disable:Boolean,onVisibility:Function},setup(e,{slots:r,emit:t}){const n=A(v.value===!0?e.ssrPrerender:!1),s=u(()=>e.root!==void 0||e.margin!==void 0||e.threshold!==void 0?{handler:d,cfg:{root:e.root,rootMargin:e.margin,threshold:e.threshold}}:d),o=u(()=>e.disable!==!0&&(v.value!==!0||e.once!==!0||e.ssrPrerender!==!0)),i=u(()=>[[w,s.value,void 0,{once:e.once}]]),c=u(()=>`--q-transition-duration: ${e.transitionDuration}ms`);function d(a){n.value!==a.isIntersecting&&(n.value=a.isIntersecting,e.onVisibility!==void 0&&t("visibility",n.value))}function f(){return n.value===!0?[b("div",{key:"content",style:c.value},q(r.default))]:void 0}return()=>{const a=e.transition?[b(N,{name:"q-transition--"+e.transition},f)]:f();return I(e.tag,{class:"q-intersection"},a,"main",o.value,()=>i.value)}}}),B=(e=>(e.STRING="string",e.TEXT="text",e.NUMBER="number",e.LIST="list",e.BOOLEAN="boolean",e.PASSWORD="password",e.VAULT="Vault",e))(B||{});const $=[{label:"String",value:"string",icon:"sym_o_text_fields"},{label:"Password",value:"password",icon:"sym_o_password"},{label:"Text",value:"text",icon:"sym_o_edit_note"},{label:"Number",value:"number",icon:"sym_o_numbers"},{label:"Boolean",value:"boolean",icon:"sym_o_exposure"},{label:"List",value:"list",icon:"sym_o_list"},{label:"Vault",value:"Vault",icon:"sym_o_text_fields"}],D=(e,r)=>{if(r==="string"||r==="password"||r==="text"||r==="Vault")return l(e)?Array.isArray(e)?`[${e}]`:`${e}`:"";if(r==="number")if(l(e)){const t=Number(e);return isNaN(t)?0:t}else return 0;else{if(r==="boolean")return l(e)?["true",1].includes(`${e}`):!1;if(r==="list")if(l(e))if(Array.isArray(e)){const t=[];for(const n of e)t.push(`${n}`);return t}else try{const t=JSON.parse(`${e}`);if(Array.isArray(t)){const n=[];for(const s of t)n.push(`${s}`);return n}else return[]}catch{return[]}else return[]}},E=e=>D(e,"string"),l=e=>!(e==null||e==="");export{B as C,P as Q,D as a,l as b,$ as t,E as v};
